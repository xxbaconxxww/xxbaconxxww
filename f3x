loadstring(game:HttpGet("https://raw.githubusercontent.com/xxbaconxxww/xxbaconxxww/main/randomgear"))()
-- // GUI TO LUA \\ --

-- // INSTANCES: 43 | SCRIPTS: 2 | MODULES: 0 \\ --

local UI = {}

-- // StarterGui.Btools \\ --
UI["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"))
UI["1"]["Name"] = [[Btools]]
UI["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling
UI["1"]["ResetOnSpawn"] = false

-- // StarterGui.Btools.TextButton \\ --
UI["2"] = Instance.new("TextButton", UI["1"])
UI["2"]["BorderSizePixel"] = 0
UI["2"]["TextSize"] = 14
UI["2"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["2"]["Size"] = UDim2.new(0.07199, 0, 0.09615, 0)
UI["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["2"]["Position"] = UDim2.new(0.02025, 0, 0.27083, 0)

-- // StarterGui.Btools.TextButton.UICorner \\ --
UI["3"] = Instance.new("UICorner", UI["2"])


-- // StarterGui.Btools.Frame \\ --
UI["4"] = Instance.new("Frame", UI["1"])
UI["4"]["BorderSizePixel"] = 0
UI["4"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["4"]["Size"] = UDim2.new(0, 569, 0, 62)
UI["4"]["Position"] = UDim2.new(0.20666, 0, 0.22918, 0)
UI["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)

-- // StarterGui.Btools.Frame.Frame \\ --
UI["5"] = Instance.new("Frame", UI["4"])
UI["5"]["BorderSizePixel"] = 0
UI["5"]["BackgroundColor3"] = Color3.fromRGB(51, 51, 51)
UI["5"]["AutomaticSize"] = Enum.AutomaticSize.Y
UI["5"]["Size"] = UDim2.new(1.00149, 0, 3.91411, 0)
UI["5"]["Position"] = UDim2.new(-0.00149, 0, 0.98715, 0)
UI["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["5"]["BackgroundTransparency"] = 0.25

-- // StarterGui.Btools.Frame.Frame.CButton \\ --
UI["6"] = Instance.new("TextButton", UI["5"])
UI["6"]["BorderSizePixel"] = 0
UI["6"]["TextSize"] = 30
UI["6"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["6"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["6"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["6"]["BackgroundTransparency"] = 0.25
UI["6"]["Name"] = [[CButton]]
UI["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6"]["Text"] = [[Clone]]
UI["6"]["Position"] = UDim2.new(0.03104, 0, 0.064, 0)

-- // StarterGui.Btools.Frame.Frame.CButton.UICorner \\ --
UI["7"] = Instance.new("UICorner", UI["6"])


-- // StarterGui.Btools.Frame.Frame.CButton.UIFlexItem \\ --
UI["8"] = Instance.new("UIFlexItem", UI["6"])
UI["8"]["GrowRatio"] = 1
UI["8"]["FlexMode"] = Enum.UIFlexMode.Custom
UI["8"]["ItemLineAlignment"] = Enum.ItemLineAlignment.Center

-- // StarterGui.Btools.Frame.Frame.ButtonScript \\ --
UI["9"] = Instance.new("LocalScript", UI["5"])
UI["9"]["Name"] = [[ButtonScript]]

-- // StarterGui.Btools.Frame.Frame.UIGridLayout \\ --
UI["a"] = Instance.new("UIGridLayout", UI["5"])
UI["a"]["CellSize"] = UDim2.new(0, 100, 0, 60)
UI["a"]["FillDirectionMaxCells"] = 8
UI["a"]["SortOrder"] = Enum.SortOrder.LayoutOrder
UI["a"]["CellPadding"] = UDim2.new(0, 17, 0, 18)

-- // StarterGui.Btools.Frame.Frame.CloneInstance \\ --
UI["b"] = Instance.new("TextBox", UI["5"])
UI["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["b"]["PlaceholderColor3"] = Color3.fromRGB(179, 179, 179)
UI["b"]["BorderSizePixel"] = 0
UI["b"]["TextSize"] = 30
UI["b"]["Name"] = [[CloneInstance]]
UI["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["b"]["PlaceholderText"] = [[Instance]]
UI["b"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["b"]["Position"] = UDim2.new(0.13562, 0, 0.17363, 0)
UI["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["b"]["Text"] = [[]]
UI["b"]["BackgroundTransparency"] = 0.25

-- // StarterGui.Btools.Frame.Frame.CloneInstance.UICorner \\ --
UI["c"] = Instance.new("UICorner", UI["b"])


-- // StarterGui.Btools.Frame.Frame.CloneNum \\ --
UI["d"] = Instance.new("TextBox", UI["5"])
UI["d"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["d"]["BorderSizePixel"] = 0
UI["d"]["TextSize"] = 30
UI["d"]["Name"] = [[CloneNum]]
UI["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["d"]["PlaceholderText"] = [[Num]]
UI["d"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["d"]["Position"] = UDim2.new(0.51614, 0, 0.06291, 0)
UI["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["d"]["Text"] = [[]]
UI["d"]["BackgroundTransparency"] = 0.25

-- // StarterGui.Btools.Frame.Frame.CloneNum.UICorner \\ --
UI["e"] = Instance.new("UICorner", UI["d"])


-- // StarterGui.Btools.Frame.Frame.parentbox \\ --
UI["f"] = Instance.new("TextBox", UI["5"])
UI["f"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["f"]["BorderSizePixel"] = 0
UI["f"]["TextSize"] = 30
UI["f"]["Name"] = [[parentbox]]
UI["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["f"]["PlaceholderText"] = [[Parent]]
UI["f"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["f"]["Position"] = UDim2.new(1.14795, 0, 0.22657, 0)
UI["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["f"]["Text"] = [[]]
UI["f"]["BackgroundTransparency"] = 0.25

-- // StarterGui.Btools.Frame.Frame.parentbox.UICorner \\ --
UI["10"] = Instance.new("UICorner", UI["f"])


-- // StarterGui.Btools.Frame.Frame.CloneOption \\ --
UI["11"] = Instance.new("TextButton", UI["5"])
UI["11"]["BorderSizePixel"] = 0
UI["11"]["TextSize"] = 30
UI["11"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["11"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["11"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["11"]["BackgroundTransparency"] = 0.25
UI["11"]["Name"] = [[CloneOption]]
UI["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["11"]["Text"] = [[One]]
UI["11"]["Position"] = UDim2.new(0.02968, 0, 0.23135, 0)

-- // StarterGui.Btools.Frame.Frame.CloneOption.UICorner \\ --
UI["12"] = Instance.new("UICorner", UI["11"])


-- // StarterGui.Btools.Frame.Frame.UnlockAll \\ --
UI["13"] = Instance.new("TextButton", UI["5"])
UI["13"]["BorderSizePixel"] = 0
UI["13"]["TextSize"] = 30
UI["13"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["13"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["13"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["13"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["13"]["BackgroundTransparency"] = 0.25
UI["13"]["Name"] = [[UnlockAll]]
UI["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["13"]["Text"] = [[UnlockAll]]
UI["13"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.UnlockAll.UICorner \\ --
UI["14"] = Instance.new("UICorner", UI["13"])


-- // StarterGui.Btools.Frame.Frame.FindTool \\ --
UI["15"] = Instance.new("TextButton", UI["5"])
UI["15"]["BorderSizePixel"] = 0
UI["15"]["TextSize"] = 30
UI["15"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["15"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["15"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["15"]["Size"] = UDim2.new(0.33546, 0, 0.13183, 0)
UI["15"]["BackgroundTransparency"] = 0.25
UI["15"]["Name"] = [[FindTool]]
UI["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["15"]["Text"] = [[Scan F3X]]
UI["15"]["Position"] = UDim2.new(0.03104, 0, 0.84281, 0)

-- // StarterGui.Btools.Frame.Frame.FindTool.UICorner \\ --
UI["16"] = Instance.new("UICorner", UI["15"])


-- // StarterGui.Btools.Frame.Frame.BaseplateBtn \\ --
UI["17"] = Instance.new("TextButton", UI["5"])
UI["17"]["BorderSizePixel"] = 0
UI["17"]["TextSize"] = 30
UI["17"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["17"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["17"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["17"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["17"]["BackgroundTransparency"] = 0.25
UI["17"]["Name"] = [[BaseplateBtn]]
UI["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["17"]["Text"] = [[Baseplate]]
UI["17"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.BaseplateBtn.UICorner \\ --
UI["18"] = Instance.new("UICorner", UI["17"])


-- // StarterGui.Btools.Frame.Frame.LockAll \\ --
UI["19"] = Instance.new("TextButton", UI["5"])
UI["19"]["BorderSizePixel"] = 0
UI["19"]["TextSize"] = 30
UI["19"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["19"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["19"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["19"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["19"]["BackgroundTransparency"] = 0.25
UI["19"]["Name"] = [[LockAll]]
UI["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["19"]["Text"] = [[LockAll]]
UI["19"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.LockAll.UICorner \\ --
UI["1a"] = Instance.new("UICorner", UI["19"])


-- // StarterGui.Btools.Frame.Frame.gears \\ --
UI["1b"] = Instance.new("TextButton", UI["5"])
UI["1b"]["BorderSizePixel"] = 0
UI["1b"]["TextSize"] = 30
UI["1b"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["1b"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["1b"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["1b"]["BackgroundTransparency"] = 0.25
UI["1b"]["Name"] = [[gears]]
UI["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1b"]["Text"] = [[Gears]]
UI["1b"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.gears.UICorner \\ --
UI["1c"] = Instance.new("UICorner", UI["1b"])


-- // StarterGui.Btools.Frame.Frame.BoxButton \\ --
UI["1d"] = Instance.new("TextButton", UI["5"])
UI["1d"]["BorderSizePixel"] = 0
UI["1d"]["TextSize"] = 30
UI["1d"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["1d"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["1d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["1d"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["1d"]["BackgroundTransparency"] = 0.25
UI["1d"]["Name"] = [[BoxButton]]
UI["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1d"]["Text"] = [[SelectBox]]
UI["1d"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.BoxButton.UICorner \\ --
UI["1e"] = Instance.new("UICorner", UI["1d"])


-- // StarterGui.Btools.Frame.Frame.SetText \\ --
UI["1f"] = Instance.new("TextButton", UI["5"])
UI["1f"]["BorderSizePixel"] = 0
UI["1f"]["TextSize"] = 30
UI["1f"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["1f"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["1f"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["1f"]["BackgroundTransparency"] = 0.25
UI["1f"]["Name"] = [[SetText]]
UI["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1f"]["Text"] = [[Set Text]]
UI["1f"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.SetText.UICorner \\ --
UI["20"] = Instance.new("UICorner", UI["1f"])


-- // StarterGui.Btools.Frame.Frame.delete \\ --
UI["21"] = Instance.new("TextButton", UI["5"])
UI["21"]["BorderSizePixel"] = 0
UI["21"]["TextSize"] = 30
UI["21"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["21"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["21"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["21"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["21"]["BackgroundTransparency"] = 0.25
UI["21"]["Name"] = [[delete]]
UI["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["21"]["Text"] = [[Delete]]
UI["21"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.delete.UICorner \\ --
UI["22"] = Instance.new("UICorner", UI["21"])


-- // StarterGui.Btools.Frame.Frame.None3 \\ --
UI["23"] = Instance.new("TextButton", UI["5"])
UI["23"]["BorderSizePixel"] = 0
UI["23"]["TextSize"] = 30
UI["23"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["23"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["23"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["23"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["23"]["BackgroundTransparency"] = 0.25
UI["23"]["Name"] = [[None3]]
UI["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["23"]["Text"] = [[UnlockAll]]
UI["23"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.None3.UICorner \\ --
UI["24"] = Instance.new("UICorner", UI["23"])


-- // StarterGui.Btools.Frame.Frame.None4 \\ --
UI["25"] = Instance.new("TextButton", UI["5"])
UI["25"]["BorderSizePixel"] = 0
UI["25"]["TextSize"] = 30
UI["25"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["25"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["25"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["25"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["25"]["BackgroundTransparency"] = 0.25
UI["25"]["Name"] = [[None4]]
UI["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["25"]["Text"] = [[UnlockAll]]
UI["25"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.None4.UICorner \\ --
UI["26"] = Instance.new("UICorner", UI["25"])


-- // StarterGui.Btools.Frame.UIStroke \\ --
UI["27"] = Instance.new("UIStroke", UI["4"])


-- // StarterGui.Btools.Colors \\ --
UI["28"] = Instance.new("Frame", UI["1"])
UI["28"]["BorderSizePixel"] = 0
UI["28"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["28"]["Size"] = UDim2.new(0, 293, 0, 306)
UI["28"]["Position"] = UDim2.new(-0.0004, 0, 0.51486, 0)
UI["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["28"]["Name"] = [[Colors]]

-- // StarterGui.Btools.Colors.LocalScript \\ --
UI["29"] = Instance.new("LocalScript", UI["28"])


-- // StarterGui.Btools.Colors.UIGridLayout \\ --
UI["2a"] = Instance.new("UIGridLayout", UI["28"])
UI["2a"]["SortOrder"] = Enum.SortOrder.LayoutOrder

-- // StarterGui.Btools.Colors.TextButton \\ --
UI["2b"] = Instance.new("TextButton", UI["28"])
UI["2b"]["BorderSizePixel"] = 0
UI["2b"]["TextSize"] = 14
UI["2b"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["2b"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 154)
UI["2b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["2b"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)

-- // StarterGui.Btools.Frame.Frame.ButtonScript \\ --
local function SCRIPT_9()
local script = UI["9"]
	
	script.Parent.Parent.Parent.TextButton.MouseButton1Down:Connect(function()
		script.Parent.Visible = not script.Parent.Visible
	end)
	local TextBox = script.Parent.CloneNum
	TextBox:GetPropertyChangedSignal("Text"):Connect(function()
		TextBox.Text = TextBox.Text:gsub('%D+', '');
	end)
	
	local frame = script.Parent
	local toilet
	local parentbox = frame.parentbox
	local CloneNum = frame.CloneNum
	local CloneInstance = frame.CloneInstance
	local CloneOption = frame.CloneOption
	local TextButton2 = frame.FindTool
	local player = game.Players.LocalPlayer
	local mouse = player:GetMouse()
	local char = player.Character
	local u = game:GetService("UserInputService")
	local tool
	local btool
	local BaseplateBtn = frame.BaseplateBtn
	local boxbutton = frame.BoxButton
	local set = frame.SetText
	local gears = frame.gears
	local deletebtn = frame.delete
	local t1 = {}
	local t2 = {}
	print("Snow")
	sbox = Instance.new("SelectionBox",workspace)
	sbox.Visible = false
	sbox.Adornee = nil
	set.MouseButton1Down:Connect(function()
		if sbox.Adornee then
			CloneInstance.Text = tostring(sbox.Adornee)
		end
	end)
	
	gears.MouseButton1Down:Connect(function()
		randomgear()
	end)
	boxbutton.MouseButton1Down:Connect(function()
		sbox.Visible = not sbox.Visible
	end)
	mouse.Button1Down:Connect(function()
		print(mouse.Target)
		if not sbox.Visible then return end
		sbox.Adornee = mouse.Target:FindFirstAncestorOfClass("Model") or
			mouse.Target
	end)
	
	
	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
	
	function SpawnLighting(part)
		local sb = Instance.new("SelectionBox",part)
		sb.Adornee = part
		sb.LineThickness = 0.01
		sb.Color3 = Color3.new(0,1,2)
		sb.SurfaceColor3 = Color3.new(0, 0.588235, 1)
		sb.SurfaceTransparency = 0.5
		local particles = {}
		local function set(property,...)
			print(particles,property,...)
			for i,v in particles do
				v[property] = ...
			end
		end
		local a = Instance.new("Attachment",part)
		local l1,l2,l3,l4 = 
			Instance.new("ParticleEmitter",a),
		Instance.new("ParticleEmitter",a),
		Instance.new("ParticleEmitter",a),
		Instance.new("ParticleEmitter",a)
		l1.Name = "Lighting1"
		l2.Name = "Lighting2"
		l3.Name = "Lighting3"
		l4.Name = "Lighting4"
		particles = {l1,l2,l3,l4}
		l1.Texture = 'rbxassetid://16951505034'
		l2.Texture = 'rbxassetid://16951501423'
		l3.Texture = 'rbxassetid://16676262776'
		l4.Texture = 'rbxassetid://16676250078'
		set("Brightness",5)
		set("Color",ColorSequence.new(Color3.fromRGB(0,132,255)))
		set("LightEmission",1)
		set("LightInfluence",0)
		set("Size",NumberSequence.new(2,2))
		set("Squash",NumberSequence.new(0, -0.2, 0, 1, -0.2, 0 ))
		set("Transparency",NumberSequence.new({
			NumberSequenceKeypoint.new(0, 1),     -- Time: 0, Value: 1 (Fully transparent)
			NumberSequenceKeypoint.new(0.25, 0),  -- Time: 0.25, Value: 0 (Fully opaque)
			NumberSequenceKeypoint.new(1, 0),   -- Time: 0.5, Value: 0 (Fully opaque)
			NumberSequenceKeypoint.new(1, 1)      -- Time: 1, Value: 1 (Fully transparent)
		}))
		l1.Lifetime = NumberRange.new(0.20000000298023224, 0.20000000298023224)
		l2.Lifetime = NumberRange.new(0.20000000298023224, 0.20000000298023224)
		l3.Lifetime = NumberRange.new(0.30000001192092896, 0.30000001192092896)
		l4.Lifetime = NumberRange.new(0.30000001192092896, 0.30000001192092896)
		set("Rotation",NumberRange.new(-360, 360))
		set("Speed",NumberRange.new(0, 0))
		set("SpreadAngle",Vector2.new(-360, 360))
		l1.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid2x2
		l2.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid2x2
		l3.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid4x4
		l4.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid4x4
		set("Acceleration",Vector3.new(0,0,0))
	end
	
	function _(args)
	
		remote = tool.SyncAPI.ServerEndpoint
		remote:InvokeServer(unpack(args))
	
	end
	
	
	
	for i,v in player.Backpack:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
			SpawnLighting(tool.Handle)
		end
	end
	for i,v in game.ReplicatedStorage:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
			SpawnLighting(tool.Handle)
		end
	end
	for i,v in char:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
			SpawnLighting(tool.Handle)
		end
	end
	print("hi4")
	
	TextButton2.MouseButton1Down:Connect(function()
		if not tool.Parent then
			for i,v in player.Backpack:GetDescendants() do
				if v.Name == "SyncAPI" then
					tool = v.Parent
					SpawnLighting(tool.Handle)
					return
				end
			end
			for i,v in game.ReplicatedStorage:GetDescendants() do
				if v.Name == "SyncAPI" then
					tool = v.Parent
					SpawnLighting(tool.Handle)
					return
				end
			end
			for i,v in char:GetDescendants() do
				if v.Name == "SyncAPI" then
					tool = v.Parent
					SpawnLighting(tool.Handle)
					return
				end
			end
		end
	end)
	print("hi5")
	
	
	local hdadminclient = game.ReplicatedStorage:FindFirstChild("HDAdminClient")
	local requestcommand
	if hdadminclient then
		requestcommand = hdadminclient.Signals.RequestCommand
		if not tool.Parent then
			hdadminclient.Signals.RequestCommand:InvokeServer(";btools")
			btool = player.Backpack.ChildAdded:Wait()
			btool = btool:FindFirstChild("SyncAPI")
			if btool then
				tool = btool.Parent
				SpawnLighting(tool.Handle)
			end
		end
	end
	print("hi6")
	
	player.CharacterAdded:Connect(function()
		hdadminclient.Signals.RequestCommand:InvokeServer(";btools")
		btool = player.Backpack.ChildAdded:Wait()
		btool = btool:FindFirstChild("SyncAPI")
		if btool then
			tool = btool.Parent
			SpawnLighting(tool.Handle)
		end
	end)
	
	print("hi7")
	
	
	
	
	
	function SetCollision(part,boolean)
		local args = {
			[1] = "SyncCollision",
			[2] = {
				[1] = {
					["Part"] = part,
					["CanCollide"] = boolean
				}
			}
		}
		_(args)
	end
	
	function SetAnchor(boolean,part)
		local args = {
			[1] = "SyncAnchor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Anchored"] = boolean
				}
			}
		}
		_(args)
	end
	
	function AddClone(part,mods)
		local args = {
			[1] = "Clone",
			[2] = {
				["Part"] = part
			},
			[3] = workspace
		}
		_(args)
	end
	
	function CreatePart(cf,parent)
		local args = {
			[1] = "CreatePart",
			[2] = "Normal",
			[3] = cf,
			[4] = parent
		}
		_(args)
	end
	function DestroyPart(part)
		local args = {
			[1] = "Remove",
			[2] = {
				[1] = part
			}
		}
		_(args)
	end
	function DestroyParts(part)
		local args = {
			[1] = "Remove",
			[2] = part
		}
		_(args)
	end
	function MovePart(part,cf)
		local args = {
			[1] = "SyncMove",
			[2] = {
				[1] = {
					["Part"] = part,
					["CFrame"] = cf
				}
			}
		}
		_(args)
	end
	function Resize(part,size,cf)
		local args = {
			[1] = "SyncResize",
			[2] = {
				[1] = {
					["Part"] = part,
					["CFrame"] = cf,
					["Size"] = size
				}
			}
		}
		_(args)
	end
	function AddMesh(part)
		local args = {
			[1] = "CreateMeshes",
			[2] = {
				[1] = {
					["Part"] = part
				}
			}
		}
		_(args)
	end
	
	function SetMesh(part,meshid)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["MeshId"] = "rbxassetid://"..meshid
				}
			}
		}
		_(args)
	end
	function SetName(part, stringg)
		local args = {
			[1] = "SetName",
			[2] = {
				[1] = part
			},
			[3] = stringg
		}
	
		_(args)
	end
	function MeshResize(part,size)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["Scale"] = size
				}
			}
		}
		_(args)
	end
	function Weld(part1, part2,lead)
		local args = {
			[1] = "CreateWelds",
			[2] = {
				[1] = part1,
				[2] = part2
			},
			[3] = lead
		}
		_(args)
	
	end
	function SetLocked(part,boolean)
		local args = {
			[1] = "SetLocked",
			[2] = {
				[1] = part
			},
			[3] = boolean
		}
		_(args)
	end
	function SetTrans(part,int)
		local args = {
			[1] = "SyncMaterial",
			[2] = {
				[1] = {
					["Part"] = part,
					["Transparency"] = int
				}
			}
		}
		_(args)
	end
	function CreateSpotlight(part)
		local args = {
			[1] = "CreateLights",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "SpotLight"
				}
			}
		}
		_(args)
	end
	function SyncLighting(part,brightness)
		local args = {
			[1] = "SyncLighting",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "SpotLight",
					["Brightness"] = brightness
				}
			}
		}
		_(args)
	end
	function Color(part,color)
		local args = {
			[1] = "SyncColor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Color"] = color --[[Color3]],
					["UnionColoring"] = false
				}
			}
		}
		_(args)
	end
	function SyncTexture(part,asset,side,trans,sptu,sptv)
		local args = {
			[1] = "SyncTexture",
			[2] = {
				[1] = {
					["Face"] = Enum.NormalId[side],
					["Part"] = part,
					["StudsPerTileV"] = sptv,
					["StudsPerTileU"] = sptu,
					["Texture"] = "rbxassetid://".. asset,
					["TextureType"] = "Texture",
					["Transparency"] = trans
				}
			}
		}
		_(args)
	end
	function SyncTexture2(part,asset,side,trans,sptu,sptv)
		local args = {
			[1] = "SyncTexture",
			[2] = {
				[1] = {
					["Face"] = Enum.NormalId[side],
					["Part"] = part,
					["StudsPerTileV"] = sptv,
					["StudsPerTileU"] = sptu,
					["Texture"] = "rbxassetid://".. asset,
					["TextureType"] = "Texture",
					["Transparency"] = trans
				}
			}
		}
		t2 = args
	end
	
			--[[
			function Sky(id)
				e = char.HumanoidRootPart.CFrame.x
				f = char.HumanoidRootPart.CFrame.y
				g = char.HumanoidRootPart.CFrame.z
				CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
				for i,v in game.Workspace:GetDescendants() do
					if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
						--spawn(function()
						SetName(v,"Sky")
						AddMesh(v)
						--end)
						--spawn(function()
						SetMesh(v,"8006679977")
						SetTexture(v,id)
						--end)
						MeshResize(v,Vector3.new(50,50,50))
						SetLocked(v,true)
					end
				end
			end
			Sky("15913000160")
			--]]
	-----------------------------------
	
	local player = game.Players.LocalPlayer
	local char = player.Character
	local tool
	for i,v in player:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
		end
	end
	for i,v in game.ReplicatedStorage:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
		end
	end
	--craaa
	
	function SetCollision(part,boolean)
		local args = {
			[1] = "SyncCollision",
			[2] = {
				[1] = {
					["Part"] = part,
					["CanCollide"] = boolean
				}
			}
		}
		_(args)
	end
	function SetAnchor(boolean,part)
		local args = {
			[1] = "SyncAnchor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Anchored"] = boolean
				}
			}
		}
		_(args)
	end
	
	function CreatePart(cf,parent)
		local args = {
			[1] = "CreatePart",
			[2] = "Normal",
			[3] = cf,
			[4] = parent
		}
		_(args)
	end
	function DestroyPart(part)
		local args = {
			[1] = "Remove",
			[2] = {
				[1] = part
			}
		}
		_(args)
	end
	function MovePart(part,cf)
		local args = {
			[1] = "SyncMove",
			[2] = {
				[1] = {
					["Part"] = part,
					["CFrame"] = cf
				}
			}
		}
		_(args)
	end
	function Resize(part,size,cf)
		local args = {
			[1] = "SyncResize",
			[2] = {
				[1] = {
					["Part"] = part,
					["CFrame"] = cf,
					["Size"] = size
				}
			}
		}
		_(args)
	end
	function AddMesh(part)
		local args = {
			[1] = "CreateMeshes",
			[2] = {
				[1] = {
					["Part"] = part
				}
			}
		}
		_(args)
	end
	
	function SetMesh(part,meshid)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["MeshId"] = "rbxassetid://"..meshid
				}
			}
		}
		_(args)
	end
	function SetName(part, stringg)
		local args = {
			[1] = "SetName",
			[2] = {
				[1] = part
			},
			[3] = stringg
		}
	
		_(args)
	end
	function MeshResize(part,size)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["Scale"] = size
				}
			}
		}
		_(args)
	end
	function Weld(part1, part2,lead)
		local args = {
			[1] = "CreateWelds",
			[2] = {
				[1] = part1,
				[2] = part2
			},
			[3] = lead
		}
		_(args)
	
	end
	
	function SetTrans(part,int)
		local args = {
			[1] = "SyncMaterial",
			[2] = {
				[1] = {
					["Part"] = part,
					["Transparency"] = int
				}
			}
		}
		_(args)
	end
	function CreateSpotlight(part)
		local args = {
			[1] = "CreateLights",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "SpotLight"
				}
			}
		}
		_(args)
	end
	function SyncLighting(part,brightness)
		local args = {
			[1] = "SyncLighting",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "SpotLight",
					["Brightness"] = brightness
				}
			}
		}
		_(args)
	end
	function Color(part,color)
		local args = {
			[1] = "SyncColor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Color"] = color --[[Color3]],
					["UnionColoring"] = true
				}
			}
		}
		_(args)
	end
	function AddTexture(part,side,texture)
		local args = {
			[1] = "CreateTextures",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = texture,
				}
			}
		}
	
		_(args)
	end
	
	function AddDecal(part,asset,side)
		local args = {
			[1] = "SyncTexture",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = "Decal",
					["Texture"] = "rbxassetid://".. asset
				}
			}
		}
		_(args)
	end
	
	function AddClone2(PartTable)
		local args = {
			[1] = "Clone",
			[2] = PartTable,
			[3] = workspace:FindFirstChild(parentbox.Text) or workspace
		}
		_(args)
	end
	
	function SetLocked2(...)
		local bool = {}
		for i = 1, #... do
			table.insert(bool,true)
		end
		local args = {
			[1] = "SetLocked",
			[2] = ...,
			[3] = bool
		}
		print(unpack(args))
		_(args)
	end
	function SetUnlocked(...)
		local bool = {}
		for i = 1, #... do
			table.insert(bool,false)
		end
		local args = {
			[1] = "SetLocked",
			[2] = ...,
			[3] = bool
		}
		print(unpack(args))
		_(args)
	end
	function AddTexture2(part,side,texture)
		local args = {
			[1] = "CreateTextures",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = texture,
				}
			}
		}
	
		t1 = args
	end
	
	poor = ""
	script.Parent.LockAll.MouseButton1Down:Connect(function()
		local part = {}
		for i,v in game.Workspace:GetDescendants() do
			if v:IsA("BasePart") and not v.Locked then
				poor = v
				table.insert(part,v)
			end
		end
		SetLocked2(part)
		print("Locked "..poor.Name..tostring(poor.Locked))
	end)
	
	script.Parent.UnlockAll.MouseButton1Down:Connect(function()
		local part = {}
		for i,v in game.Workspace:GetDescendants() do
			if v:IsA("BasePart") and v.Locked then
				poor = v
				table.insert(part,v)
			end
		end
		SetUnlocked(part)
		print("Unocked "..poor.Name..tostring(not poor.Locked))
	end)
	
	local cloneoptiontext = {"Nearest","Multiple","One"}
	cloneoptioncount = 0
	CloneOption.MouseButton1Down:Connect(function()
		cloneoptioncount += 1
		CloneOption.Text = cloneoptiontext[cloneoptioncount]
		if cloneoptioncount == #cloneoptiontext then
			cloneoptioncount = 0
		end
	end)
	function someone()
		local mods = {}
		if not sbox.Adornee then
			local toilet = workspace:FindFirstChild(CloneInstance.Text)
			if not toilet then
				warn("not found")
				for i,v in workspace:GetDescendants() do
					if v.Name == CloneInstance.Text then
						toilet = v
						print(toilet)
						break
					end
				end
			end
		else toilet = sbox.Adornee end
		for i = 1, tonumber(CloneNum.Text) or 1 do
			table.insert(mods,toilet)
		end
		AddClone2(mods)
	end
	function Multiple()
		local part = CloneInstance.Text
		local mods = {}
		for i,v in workspace:GetDescendants() do
			if v.Name == CloneInstance.Text then
				table.insert(mods,v)
			end
		end
		AddClone2(mods)
	end
	function Nearest(part)
		local mods = {}
		local shortestDistance = math.huge
		for _, part in pairs(workspace:GetDescendants()) do
			if part:IsA("BasePart") then  -- Check if it's a part (BasePart includes all physical parts)
				local distance = (part.Position - char.HumanoidRootPart.Position).Magnitude -- Calculate the distance
				if distance < shortestDistance then
					shortestDistance = distance
					nearestPart = part
				end
			end
		end
		for i = 1, tonumber(CloneNum.Text) do
			table.insert(mods,nearestPart)
		end
		AddClone2(mods)
	end
	script.Parent.CButton.MouseButton1Down:Connect(function()
		print(cloneoptioncount)
		if cloneoptioncount == 0 or  cloneoptioncount == 3 then
			someone()
			print("someone")
		elseif cloneoptioncount == 1 then
			Nearest()
			print("nearest")
		elseif cloneoptioncount == 2 then
			Multiple()
			print("multiple")
		end
	
	end)
	
	
	local be = Instance.new("ObjectValue")
	local resizepart = nil
	workspace.Terrain.ChildAdded:Connect(function(r)
		be.Value = r
	end)
	
	function SetParent(part,parent)
		local args = {
			[1] = "SetParent",
			[2] = {
				part
			},
			[3] = {
				parent
			}
		}
		_(args)
	end
	
	BaseplateBtn.MouseButton1Down:Connect(function()
		print("bruh")
		CreatePart(CFrame.new(0, -8, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),workspace.Terrain)
		local be = be.Changed:Wait()
		Resize(be,Vector3.new(2048, 16, 2048),be.CFrame)
		SetLocked(be,true)
		Color(be,Color3.fromRGB(91, 154, 76))
		AddTexture(be,"Top","Texture")
		SyncTexture(be,"6372755229","Top",0.8,8,8)
		SetName(be,"Baseplate")
	
	 
		print("hi baseplate")
	end)
	deletebtn.MouseButton1Down:Connect(function()
		local part = {}
		for i, v in workspace:GetDescendants() do
			if v:IsA("BasePart") and v.Name == CloneInstance.Text then
				table.insert(part,v)
			end
		end
		DestroyParts(part)
	end)
	
		--[[
		for i, v in pairs(t2) do
			table.insert(t1, v)
		end
		local args = t1
		print(args)
		_(args)
		--]]
	local m = game.ReplicatedStorage.Value.Value
	local bucket = nil
	function paintbucket()
		if not bucket then 
			bucket = game.Players.LocalPlayer.Character:WaitForChild("PaintBucket")
		end
		print(bucket)
		if bucket then
			bucket = game.Players.LocalPlayer.Character:WaitForChild("PaintBucket")
		end
		wait(1)
		print(bucket)
		local remote = bucket:WaitForChild("Remotes")
		local args = {
			[1] = "PaintPart",
			[2] = {
				["Color"] = Color3.new(.94902, 0.952941, 0.952941),
				["Part"] = m
			}
		}
		print("fire in da hole")
		remote.ServerControls:InvokeServer(unpack(args))
	
	end
	
	paintbucket()
	
	brickcolors = {}
end
task.spawn(SCRIPT_9)
-- // StarterGui.Btools.Colors.LocalScript \\ --
local function SCRIPT_29()
local script = UI["29"]
	local colors = {"White", "Grey", "Light yellow", "Medium stone grey", "Brick yellow", "Light green (Mint)", "Light reddish violet", "Pastel Blue", "Light orange brown", "Nougat", "Bright red", "Med. reddish violet", "Bright blue", "Bright yellow", "Earth orange", "Black", "Dark grey", "Dark green", "Medium green", "Lig. Yellowich orange", "Bright green", "Dark orange", "Light bluish violet", "Transparent", "Tr. Red", "Tr. Lg blue", "Tr. Blue", "Tr. Yellow", "Light blue", "Tr. Flu. Reddish orange", "Tr. Green", "Tr. Flu. Green", "Phosph. White", "Light red", "Medium red", "Medium blue", "Light grey", "Bright violet", "Br. yellowish orange", "Bright orange", "Bright bluish green", "Earth yellow", "Bright bluish violet", "Tr. Brown", "Medium bluish violet", "Tr. Medi. reddish violet", "Med. yellowish green", "Med. bluish green", "Light bluish green", "Br. yellowish green", "Lig. yellowish green", "Med. yellowish orange", "Br. reddish orange", "Bright reddish violet", "Light orange", "Tr. Bright bluish violet", "Gold", "Dark nougat", "Silver", "Neon orange", "Neon green", "Sand blue", "Sand violet", "Medium orange", "Sand yellow", "Earth blue", "Earth green", "Tr. Flu. Blue", "Sand blue metallic", "Sand violet metallic", "Sand yellow metallic", "Dark grey metallic", "Black metallic", "Light grey metallic", "Sand green", "Sand red", "Dark red", "Tr. Flu. Yellow", "Tr. Flu. Red", "Gun metallic", "Red flip/flop", "Yellow flip/flop", "Silver flip/flop", "Curry", "Fire Yellow", "Flame yellowish orange", "Reddish brown", "Flame reddish orange", "Royal blue", "Dark Royal blue", "Bright reddish lilac", "Dark stone grey", "Lemon metallic", "Light stone grey", "Dark Curry", "Faded green", "Turquoise", "Light Royal blue", "Medium Royal blue", "Rust", "Brown", "Reddish lilac", "Lilac", "Light lilac", "Bright purple", "Light purple", "Light pink", "Light brick yellow", "Warm yellowish orange", "Cool yellow", "Dove blue", "Medium lilac", "Slime green", "Smoky grey", "Dark blue", "Parsley green", "Steel blue", "Storm blue", "Lapis", "Dark indigo", "Sea green", "Shamrock", "Fossil", "Mulberry", "Forest green", "Cadet blue", "Electric blue", "Eggplant", "Moss", "Artichoke", "Sage green", "Ghost grey", "Lilac", "Plum", "Olivine", "Laurel green", "Quill grey", "Crimson", "Mint", "Baby blue", "Carnation pink", "Persimmon", "Maroon", "Gold", "Daisy orange", "Pearl", "Fog", "Salmon", "Terra Cotta", "Cocoa", "Wheat", "Buttermilk", "Mauve", "Sunrise", "Tawny", "Rust", "Cashmere", "Khaki", "Lily white", "Seashell", "Burgundy", "Cork", "Burlap", "Beige", "Oyster", "Pine Cone", "Fawn brown", "Hurricane grey", "Cloudy grey", "Linen", "Copper", "Medium brown", "Bronze", "Flint", "Dark taupe", "Burnt Sienna", "Institutional white", "Mid gray", "Really black", "Really red", "Deep orange", "Alder", "Dusty Rose", "Olive", "New Yeller", "Really blue", "Navy blue", "Deep blue", "Cyan", "CGA brown", "Magenta", "Pink", "Deep orange", "Teal", "Toothpaste", "Lime green", "Camo", "Grime", "Lavender", "Pastel light blue", "Pastel orange", "Pastel violet", "Pastel blue-green", "Pastel green", "Pastel yellow", "Pastel brown", "Royal purple", "Hot pink"}
	script.Parent.UIGridLayout.FillDirectionMaxCells = 15
	for i, v in colors do
		local button = Instance.new("TextButton",script.Parent)
		button.BackgroundColor3 = 	BrickColor.new(v).Color
		button.Name = v
		button.Size = UDim2.new()
	end
end
task.spawn(SCRIPT_29)

return UI["1"], require;

return UI["1"], require;
