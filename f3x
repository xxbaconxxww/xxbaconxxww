-- // GUI TO LUA \\ --

-- // INSTANCES: 35 | SCRIPTS: 2 | MODULES: 0 \\ --

local UI = {}

-- // StarterGui.Btools \\ --
UI["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"))
UI["1"]["Name"] = [[Btools]]
UI["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling
UI["1"]["ResetOnSpawn"] = false

-- // StarterGui.Btools.LocalScript \\ --
UI["2"] = Instance.new("LocalScript", UI["1"])


-- // StarterGui.Btools.TextButton \\ --
UI["3"] = Instance.new("TextButton", UI["1"])
UI["3"]["BorderSizePixel"] = 0
UI["3"]["TextSize"] = 14
UI["3"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["3"]["Size"] = UDim2.new(0.07199, 0, 0.09615, 0)
UI["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["3"]["Position"] = UDim2.new(0.02025, 0, 0.27083, 0)

-- // StarterGui.Btools.TextButton.UICorner \\ --
UI["4"] = Instance.new("UICorner", UI["3"])


-- // StarterGui.Btools.Frame \\ --
UI["5"] = Instance.new("Frame", UI["1"])
UI["5"]["BorderSizePixel"] = 0
UI["5"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["5"]["Size"] = UDim2.new(0, 569, 0, 62)
UI["5"]["Position"] = UDim2.new(0.20666, 0, 0.22918, 0)
UI["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)

-- // StarterGui.Btools.Frame.Frame \\ --
UI["6"] = Instance.new("Frame", UI["5"])
UI["6"]["BorderSizePixel"] = 0
UI["6"]["BackgroundColor3"] = Color3.fromRGB(51, 51, 51)
UI["6"]["AutomaticSize"] = Enum.AutomaticSize.Y
UI["6"]["Size"] = UDim2.new(1.00149, 0, 3.91411, 0)
UI["6"]["Position"] = UDim2.new(-0.00149, 0, 0.98715, 0)
UI["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6"]["BackgroundTransparency"] = 0.25

-- // StarterGui.Btools.Frame.Frame.CButton \\ --
UI["7"] = Instance.new("TextButton", UI["6"])
UI["7"]["BorderSizePixel"] = 0
UI["7"]["TextSize"] = 30
UI["7"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["7"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["7"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["7"]["BackgroundTransparency"] = 0.25
UI["7"]["Name"] = [[CButton]]
UI["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["7"]["Text"] = [[Clone]]
UI["7"]["Position"] = UDim2.new(0.03104, 0, 0.064, 0)

-- // StarterGui.Btools.Frame.Frame.CButton.UICorner \\ --
UI["8"] = Instance.new("UICorner", UI["7"])


-- // StarterGui.Btools.Frame.Frame.CButton.UIFlexItem \\ --
UI["9"] = Instance.new("UIFlexItem", UI["7"])
UI["9"]["GrowRatio"] = 1
UI["9"]["FlexMode"] = Enum.UIFlexMode.Custom
UI["9"]["ItemLineAlignment"] = Enum.ItemLineAlignment.Center

-- // StarterGui.Btools.Frame.Frame.ButtonScript \\ --
UI["a"] = Instance.new("LocalScript", UI["6"])
UI["a"]["Name"] = [[ButtonScript]]

-- // StarterGui.Btools.Frame.Frame.ButtonScript.UIStroke \\ --
UI["b"] = Instance.new("UIStroke", UI["a"])


-- // StarterGui.Btools.Frame.Frame.UIGridLayout \\ --
UI["c"] = Instance.new("UIGridLayout", UI["6"])
UI["c"]["CellSize"] = UDim2.new(0, 100, 0, 60)
UI["c"]["FillDirectionMaxCells"] = 8
UI["c"]["SortOrder"] = Enum.SortOrder.LayoutOrder
UI["c"]["CellPadding"] = UDim2.new(0, 17, 0, 18)

-- // StarterGui.Btools.Frame.Frame.CloneInstance \\ --
UI["d"] = Instance.new("TextBox", UI["6"])
UI["d"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["d"]["PlaceholderColor3"] = Color3.fromRGB(179, 179, 179)
UI["d"]["BorderSizePixel"] = 0
UI["d"]["TextSize"] = 30
UI["d"]["Name"] = [[CloneInstance]]
UI["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["d"]["PlaceholderText"] = [[Instance]]
UI["d"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["d"]["Position"] = UDim2.new(0.13562, 0, 0.17363, 0)
UI["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["d"]["Text"] = [[]]
UI["d"]["BackgroundTransparency"] = 0.25

-- // StarterGui.Btools.Frame.Frame.CloneInstance.UICorner \\ --
UI["e"] = Instance.new("UICorner", UI["d"])


-- // StarterGui.Btools.Frame.Frame.CloneNum \\ --
UI["f"] = Instance.new("TextBox", UI["6"])
UI["f"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["f"]["BorderSizePixel"] = 0
UI["f"]["TextSize"] = 30
UI["f"]["Name"] = [[CloneNum]]
UI["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["f"]["PlaceholderText"] = [[Num]]
UI["f"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["f"]["Position"] = UDim2.new(0.51614, 0, 0.06291, 0)
UI["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["f"]["Text"] = [[]]
UI["f"]["BackgroundTransparency"] = 0.25

-- // StarterGui.Btools.Frame.Frame.CloneNum.UICorner \\ --
UI["10"] = Instance.new("UICorner", UI["f"])


-- // StarterGui.Btools.Frame.Frame.parentbox \\ --
UI["11"] = Instance.new("TextBox", UI["6"])
UI["11"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["11"]["BorderSizePixel"] = 0
UI["11"]["TextSize"] = 30
UI["11"]["Name"] = [[parentbox]]
UI["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["11"]["PlaceholderText"] = [[Parent]]
UI["11"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["11"]["Position"] = UDim2.new(1.14795, 0, 0.22657, 0)
UI["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["11"]["Text"] = [[]]
UI["11"]["BackgroundTransparency"] = 0.25

-- // StarterGui.Btools.Frame.Frame.parentbox.UICorner \\ --
UI["12"] = Instance.new("UICorner", UI["11"])


-- // StarterGui.Btools.Frame.Frame.CloneOption \\ --
UI["13"] = Instance.new("TextButton", UI["6"])
UI["13"]["BorderSizePixel"] = 0
UI["13"]["TextSize"] = 30
UI["13"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["13"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["13"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["13"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["13"]["BackgroundTransparency"] = 0.25
UI["13"]["Name"] = [[CloneOption]]
UI["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["13"]["Text"] = [[One]]
UI["13"]["Position"] = UDim2.new(0.02968, 0, 0.23135, 0)

-- // StarterGui.Btools.Frame.Frame.CloneOption.UICorner \\ --
UI["14"] = Instance.new("UICorner", UI["13"])


-- // StarterGui.Btools.Frame.Frame.UnlockAll \\ --
UI["15"] = Instance.new("TextButton", UI["6"])
UI["15"]["BorderSizePixel"] = 0
UI["15"]["TextSize"] = 30
UI["15"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["15"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["15"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["15"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["15"]["BackgroundTransparency"] = 0.25
UI["15"]["Name"] = [[UnlockAll]]
UI["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["15"]["Text"] = [[UnlockAll]]
UI["15"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.UnlockAll.UICorner \\ --
UI["16"] = Instance.new("UICorner", UI["15"])


-- // StarterGui.Btools.Frame.Frame.FindTool \\ --
UI["17"] = Instance.new("TextButton", UI["6"])
UI["17"]["BorderSizePixel"] = 0
UI["17"]["TextSize"] = 30
UI["17"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["17"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["17"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["17"]["Size"] = UDim2.new(0.33546, 0, 0.13183, 0)
UI["17"]["BackgroundTransparency"] = 0.25
UI["17"]["Name"] = [[FindTool]]
UI["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["17"]["Text"] = [[Scan F3X]]
UI["17"]["Position"] = UDim2.new(0.03104, 0, 0.84281, 0)

-- // StarterGui.Btools.Frame.Frame.FindTool.UICorner \\ --
UI["18"] = Instance.new("UICorner", UI["17"])


-- // StarterGui.Btools.Frame.Frame.BaseplateBtn \\ --
UI["19"] = Instance.new("TextButton", UI["6"])
UI["19"]["BorderSizePixel"] = 0
UI["19"]["TextSize"] = 30
UI["19"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["19"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["19"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["19"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["19"]["BackgroundTransparency"] = 0.25
UI["19"]["Name"] = [[BaseplateBtn]]
UI["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["19"]["Text"] = [[Baseplate]]
UI["19"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.BaseplateBtn.UICorner \\ --
UI["1a"] = Instance.new("UICorner", UI["19"])


-- // StarterGui.Btools.Frame.Frame.LockAll \\ --
UI["1b"] = Instance.new("TextButton", UI["6"])
UI["1b"]["BorderSizePixel"] = 0
UI["1b"]["TextSize"] = 30
UI["1b"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["1b"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["1b"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["1b"]["BackgroundTransparency"] = 0.25
UI["1b"]["Name"] = [[LockAll]]
UI["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1b"]["Text"] = [[]]
UI["1b"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.LockAll.UICorner \\ --
UI["1c"] = Instance.new("UICorner", UI["1b"])


-- // StarterGui.Btools.Frame.Frame.None \\ --
UI["1d"] = Instance.new("TextButton", UI["6"])
UI["1d"]["BorderSizePixel"] = 0
UI["1d"]["TextSize"] = 30
UI["1d"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["1d"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["1d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["1d"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["1d"]["BackgroundTransparency"] = 0.25
UI["1d"]["Name"] = [[None]]
UI["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1d"]["Text"] = [[UnlockAll]]
UI["1d"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.None.UICorner \\ --
UI["1e"] = Instance.new("UICorner", UI["1d"])


-- // StarterGui.Btools.Frame.Frame.None \\ --
UI["1f"] = Instance.new("TextButton", UI["6"])
UI["1f"]["BorderSizePixel"] = 0
UI["1f"]["TextSize"] = 30
UI["1f"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["1f"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["1f"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["1f"]["BackgroundTransparency"] = 0.25
UI["1f"]["Name"] = [[None]]
UI["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1f"]["Text"] = [[UnlockAll]]
UI["1f"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.None.UICorner \\ --
UI["20"] = Instance.new("UICorner", UI["1f"])


-- // StarterGui.Btools.Frame.Frame.None \\ --
UI["21"] = Instance.new("TextButton", UI["6"])
UI["21"]["BorderSizePixel"] = 0
UI["21"]["TextSize"] = 30
UI["21"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["21"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30)
UI["21"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["21"]["Size"] = UDim2.new(0.2, 0, 0.111, 0)
UI["21"]["BackgroundTransparency"] = 0.25
UI["21"]["Name"] = [[None]]
UI["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["21"]["Text"] = [[UnlockAll]]
UI["21"]["Position"] = UDim2.new(0.02953, 0, 0.39044, 0)

-- // StarterGui.Btools.Frame.Frame.None.UICorner \\ --
UI["22"] = Instance.new("UICorner", UI["21"])


-- // StarterGui.Btools.Frame.UIStroke \\ --
UI["23"] = Instance.new("UIStroke", UI["5"])


-- // StarterGui.Btools.LocalScript \\ --
local function SCRIPT_2()
local script = UI["2"]
	
end
task.spawn(SCRIPT_2)
-- // StarterGui.Btools.Frame.Frame.ButtonScript \\ --
local function SCRIPT_a()
local script = UI["a"]
	script.Parent.Parent.Parent.TextButton.MouseButton1Down:Connect(function()
		script.Parent.Visible = not script.Parent.Visible
	end)
	local TextBox = script.Parent.CloneNum
	TextBox:GetPropertyChangedSignal("Text"):Connect(function()
		TextBox.Text = TextBox.Text:gsub('%D+', '');
	end)
	
	local frame = script.Parent
	local toilet
	local parentbox = frame.parentbox
	local CloneNum = frame.CloneNum
	local CloneInstance = frame.CloneInstance
	local CloneOption = frame.CloneNum
	local TextButton2 = frame.FindTool
	local player = game.Players.LocalPlayer
	local char = player.Character
	local u = game:GetService("UserInputService")
	local tool
	local btool
	local BaseplateBtn = frame.BaseplateBtn
	local t1 = {}
	local t2 = {}
	print("Snow")
	
	
	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
	
	
	for i,v in player.Backpack:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
			Instance.new("Highlight",tool)
		end
	end
	for i,v in game.ReplicatedStorage:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
			Instance.new("Highlight",tool)
		end
	end
	for i,v in char:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
			Instance.new("Highlight",tool)
		end
	end
	print("hi4")
	
	TextButton2.MouseButton1Down:Connect(function()
		if not tool.Parent then
			for i,v in player.Backpack:GetDescendants() do
				if v.Name == "SyncAPI" then
					tool = v.Parent
					Instance.new("Highlight",tool)
					return
				end
			end
			for i,v in game.ReplicatedStorage:GetDescendants() do
				if v.Name == "SyncAPI" then
					tool = v.Parent
					Instance.new("Highlight",tool)
					return
				end
			end
			for i,v in char:GetDescendants() do
				if v.Name == "SyncAPI" then
					tool = v.Parent
					Instance.new("Highlight",tool)
					return
				end
			end
		end
	end)
	print("hi5")
	
	
	local hdadminclient = game.ReplicatedStorage:FindFirstChild("HDAdminClient")
	if hdadminclient then
		if not tool.Parent then
		hdadminclient.Signals.RequestCommand:InvokeServer(";btools")
		btool = player.Backpack.ChildAdded:Wait()
		btool = btool:FindFirstChild("SyncAPI")
		if btool then
			tool = btool.Parent
			Instance.new("Highlight",tool)
		end
		end
	end
	print("hi6")
	
	player.CharacterAdded:Connect(function()
		hdadminclient.Signals.RequestCommand:InvokeServer(";btools")
		btool = player.Backpack.ChildAdded:Wait()
		btool = btool:FindFirstChild("SyncAPI")
		if btool then
			tool = btool.Parent
			Instance.new("Highlight",tool)
		end
	end)
	
	print("hi7")
	
	
	
	function _(args)
		remote = tool.SyncAPI.ServerEndpoint
		print(unpack(args))
		remote:InvokeServer(unpack(args))
	end
	function SetCollision(part,boolean)
		local args = {
			[1] = "SyncCollision",
			[2] = {
				[1] = {
					["Part"] = part,
					["CanCollide"] = boolean
				}
			}
		}
		_(args)
	end
	
	function SetAnchor(boolean,part)
		local args = {
			[1] = "SyncAnchor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Anchored"] = boolean
				}
			}
		}
		_(args)
	end
	
	function AddClone(part,mods)
		local args = {
			[1] = "Clone",
			[2] = {
				["Part"] = part
			},
			[3] = workspace
		}
		_(args)
	end
	
	function CreatePart(cf,parent)
		local args = {
			[1] = "CreatePart",
			[2] = "Normal",
			[3] = cf,
			[4] = parent
		}
		_(args)
	end
	function DestroyPart(part)
		local args = {
			[1] = "Remove",
			[2] = {
				[1] = part
			}
		}
		_(args)
	end
	function MovePart(part,cf)
		local args = {
			[1] = "SyncMove",
			[2] = {
				[1] = {
					["Part"] = part,
					["CFrame"] = cf
				}
			}
		}
		_(args)
	end
	function Resize(part,size,cf)
		local args = {
			[1] = "SyncResize",
			[2] = {
				[1] = {
					["Part"] = part,
					["CFrame"] = cf,
					["Size"] = size
				}
			}
		}
		_(args)
	end
	function AddMesh(part)
		local args = {
			[1] = "CreateMeshes",
			[2] = {
				[1] = {
					["Part"] = part
				}
			}
		}
		_(args)
	end
	
	function SetMesh(part,meshid)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["MeshId"] = "rbxassetid://"..meshid
				}
			}
		}
		_(args)
	end
	function SetName(part, stringg)
		local args = {
			[1] = "SetName",
			[2] = {
				[1] = part
			},
			[3] = stringg
		}
	
		_(args)
	end
	function MeshResize(part,size)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["Scale"] = size
				}
			}
		}
		_(args)
	end
	function Weld(part1, part2,lead)
		local args = {
			[1] = "CreateWelds",
			[2] = {
				[1] = part1,
				[2] = part2
			},
			[3] = lead
		}
		_(args)
	
	end
	function SetLocked(part,boolean)
		local args = {
			[1] = "SetLocked",
			[2] = {
				[1] = part
			},
			[3] = boolean
		}
		_(args)
	end
	function SetTrans(part,int)
		local args = {
			[1] = "SyncMaterial",
			[2] = {
				[1] = {
					["Part"] = part,
					["Transparency"] = int
				}
			}
		}
		_(args)
	end
	function CreateSpotlight(part)
		local args = {
			[1] = "CreateLights",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "SpotLight"
				}
			}
		}
		_(args)
	end
	function SyncLighting(part,brightness)
		local args = {
			[1] = "SyncLighting",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "SpotLight",
					["Brightness"] = brightness
				}
			}
		}
		_(args)
	end
	function Color(part,color)
		local args = {
			[1] = "SyncColor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Color"] = color --[[Color3]],
					["UnionColoring"] = false
				}
			}
		}
		_(args)
	end
	function SyncTexture(part,asset,side,trans,sptu,sptv)
		local args = {
			[1] = "SyncTexture",
			[2] = {
				[1] = {
					["Face"] = Enum.NormalId[side],
					["Part"] = part,
					["StudsPerTileV"] = sptv,
					["StudsPerTileU"] = sptu,
					["Texture"] = "rbxassetid://".. asset,
					["TextureType"] = "Texture",
					["Transparency"] = trans
				}
			}
		}
		_(args)
	end
	function SyncTexture2(part,asset,side,trans,sptu,sptv)
		local args = {
			[1] = "SyncTexture",
			[2] = {
				[1] = {
					["Face"] = Enum.NormalId[side],
					["Part"] = part,
					["StudsPerTileV"] = sptv,
					["StudsPerTileU"] = sptu,
					["Texture"] = "rbxassetid://".. asset,
					["TextureType"] = "Texture",
					["Transparency"] = trans
				}
			}
		}
	t2 = args
	end
	
		--[[
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(50,50,50))
					SetLocked(v,true)
				end
			end
		end
		Sky("15913000160")
		--]]
	-----------------------------------
	
	local player = game.Players.LocalPlayer
	local char = player.Character
	local tool
	for i,v in player:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
		end
	end
	for i,v in game.ReplicatedStorage:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
		end
	end
	--craaa
	
	function SetCollision(part,boolean)
		local args = {
			[1] = "SyncCollision",
			[2] = {
				[1] = {
					["Part"] = part,
					["CanCollide"] = boolean
				}
			}
		}
		_(args)
	end
	function SetAnchor(boolean,part)
		local args = {
			[1] = "SyncAnchor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Anchored"] = boolean
				}
			}
		}
		_(args)
	end
	function CreatePart(cf,parent)
		local args = {
			[1] = "CreatePart",
			[2] = "Normal",
			[3] = cf,
			[4] = parent
		}
		_(args)
	end
	function DestroyPart(part)
		local args = {
			[1] = "Remove",
			[2] = {
				[1] = part
			}
		}
		_(args)
	end
	function MovePart(part,cf)
		local args = {
			[1] = "SyncMove",
			[2] = {
				[1] = {
					["Part"] = part,
					["CFrame"] = cf
				}
			}
		}
		_(args)
	end
	function Resize(part,size,cf)
		local args = {
			[1] = "SyncResize",
			[2] = {
				[1] = {
					["Part"] = part,
					["CFrame"] = cf,
					["Size"] = size
				}
			}
		}
		_(args)
	end
	function AddMesh(part)
		local args = {
			[1] = "CreateMeshes",
			[2] = {
				[1] = {
					["Part"] = part
				}
			}
		}
		_(args)
	end
	
	function SetMesh(part,meshid)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["MeshId"] = "rbxassetid://"..meshid
				}
			}
		}
		_(args)
	end
	function SetName(part, stringg)
		local args = {
			[1] = "SetName",
			[2] = {
				[1] = part
			},
			[3] = stringg
		}
	
		_(args)
	end
	function MeshResize(part,size)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["Scale"] = size
				}
			}
		}
		_(args)
	end
	function Weld(part1, part2,lead)
		local args = {
			[1] = "CreateWelds",
			[2] = {
				[1] = part1,
				[2] = part2
			},
			[3] = lead
		}
		_(args)
	
	end
	
	function SetTrans(part,int)
		local args = {
			[1] = "SyncMaterial",
			[2] = {
				[1] = {
					["Part"] = part,
					["Transparency"] = int
				}
			}
		}
		_(args)
	end
	function CreateSpotlight(part)
		local args = {
			[1] = "CreateLights",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "SpotLight"
				}
			}
		}
		_(args)
	end
	function SyncLighting(part,brightness)
		local args = {
			[1] = "SyncLighting",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "SpotLight",
					["Brightness"] = brightness
				}
			}
		}
		_(args)
	end
	function Color(part,color)
		local args = {
			[1] = "SyncColor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Color"] = color --[[Color3]],
					["UnionColoring"] = true
				}
			}
		}
		_(args)
	end
	function AddTexture(part,side,texture)
		local args = {
			[1] = "CreateTextures",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = texture,
				}
			}
		}
	
		_(args)
	end
	
	function AddDecal(part,asset,side)
		local args = {
			[1] = "SyncTexture",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = "Decal",
					["Texture"] = "rbxassetid://".. asset
				}
			}
		}
		_(args)
	end
	
	function AddClone2(PartTable)
		local args = {
			[1] = "Clone",
			[2] = PartTable,
			[3] = workspace:FindFirstChild(parentbox.Text) or workspace
		}
		_(args)
	end
	
	function SetLocked2(part,boolean)
		local args = {
			[1] = "SetLocked",
			[2] = {
				part
			},
			[3] = boolean
		}
		_(args)
	end
	function AddTexture2(part,side,texture)
		local args = {
			[1] = "CreateTextures",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = texture,
				}
			}
		}
	
		t1 = args
	end
	
	poor = ""
	script.Parent.LockAll.MouseButton1Down:Connect(function()
		for i,v in game.Workspace:GetDescendants() do
			if v:IsA("BasePart") then
				SetLocked(v,true)
				poor = v
			end
		end
		print("Locked "..tostring(poor.Locked))
	end)
	script.Parent.UnlockAll.MouseButton1Down:Connect(function()
		for i,v in game.Workspace:GetDescendants() do
			if v:IsA("BasePart") then
				SetLocked(v,false)
				poor = v
			end
		end
		print("Unlocked "..tostring(not poor.Locked))
	end)
	
	
	script.Parent.CButton.MouseButton1Down:Connect(function()
		local mods = {}
		local toilet = workspace:FindFirstChild(CloneInstance.Text)
		if not toilet then
			warn("not found")
			for i,v in workspace:GetDescendants() do
				if v.Name == CloneInstance.Text then
					toilet = v
					print(toilet)
					break
				end
			end
		end
		for i = 1, tonumber(CloneNum.Text) or 1 do
			table.insert(mods,toilet)
		end
		AddClone2(mods)
	end)
	local be = Instance.new("ObjectValue")
	local resizepart = nil
	workspace.ChildAdded:Connect(function(r)
		be.Value = r
	end)
	
	deb = false
	BaseplateBtn.MouseButton1Down:Connect(function()
		if deb then return end
		print("bruh")
		deb = true
		CreatePart(CFrame.new(0, -8, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),workspace)
		local be = be.Changed:Wait()
		Resize(be,Vector3.new(2048, 16, 2048),be.CFrame)
		SetLocked(be,true)
		Color(be,Color3.fromRGB(91, 154, 76))
		AddTexture(be,"Top","Texture")
		SyncTexture(be,"6372755229","Top",0.8,8,8)
		SetName(be,"Baseplate")
		deb = false
	print("hi baseplate")
	end)
	
	for _, part in pairs(workspace:GetDescendants()) do
		if part:IsA("BasePart") and string.lower(part.Name) == string.lower(CloneInstance.Text) or string.lower(part.Parent.Name) == string.lower(CloneInstance.Text)  then  -- Check if it's a part (BasePart includes all physical parts)
			local distance = (part.Position - char.Position).Magnitude -- Calculate the distance
			if distance < shortestDistance then
				shortestDistance = distance
				nearestPart = part
			end
		end
	end
	
	--[[
	for i, v in pairs(t2) do
		table.insert(t1, v)
	end
	local args = t1
	print(args)
	_(args)
	--]]
end
task.spawn(SCRIPT_a)

return UI["1"], require;
